package javatex;

/**
 * Represents anything that is TeX-convertible.
 * 
 * For an object to be TeX-convertible, the object must define how to convert
 * from that object into valid LaTeX code (else your LaTeX generated by this
 * program will not yield anything usable).
 * 
 * If extra checks are desired, then each object can choose to validate a given
 * piece of LaTeX code. By default all code is valid.
 * 
 * If any dependencies are needed, such as amsmath or amssymb or geometry, then
 * a TeX-convertible object must be able to communicate that to it's containers.
 * 
 * All of this can be done by overriding the three functions defined in this
 * interface.
 *
 * 
 * @author Keith Allatt
 * @version 2020-10-25
 *
 */
public interface TeX {
	/**
	 * Convert's a given object to TeX code.
	 * 
	 * @return the LaTeX representation of an object.
	 */
	public abstract String convert();

	/**
	 * Validate a TeX snippet. This should use the convert function and wrap it in a
	 * default class (document class 'standalone' / 'report') and attempt to compile
	 * it using a TeX compiler.
	 * 
	 * @return the validity of this TeX statement.
	 */
	public default boolean validate() {
		// encapsulate object within document class.
		// If this object is a document class, this method should be overridden.

		// until implemented, all code is valid.
		return true;
	}

	/**
	 * Get the package dependencies.
	 * 
	 * @return the list of dependencies.
	 */
	public default JTPackage[] getDependencies() {
		return new JTPackage[] {};
	}
}
